{{- if eq .Values.cloud_provider "aws" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: py-envs-pvc
  annotations:
    helm.sh/resource-policy: keep
spec:
  storageClassName: efs-sc
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
{{- else if eq .Values.cloud_provider "gcp" }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: py-envs-pv
spec:
  storageClassName: "enterprise-multishare-rwx"
  capacity:
    storage: 1Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  csi:
    driver: filestore.csi.storage.gke.io
    volumeHandle: {{ .Values.csi.volumeHandle }}
    volumeAttributes: 
      ip: {{ .Values.csi.volumeAttributes.ip }}
      volume: share1
  claimRef:
    name: py-envs-pvc 
    namespace: {{ .Values.claimRef.namespace }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: py-envs-pvc
  namespace: {{ .Values.metadata.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: "enterprise-multishare-rwx"
  resources:
    requests:
      storage: 1Ti
{{- else if eq .Values.cloud_provider "local" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: py-envs-pvc
  annotations:
    helm.sh/resource-policy: keep
spec:
  storageClassName: {{ .Values.jupyterhub.singleuser.storage.dynamic.storageClass }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
{{- end }}